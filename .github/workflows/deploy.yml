name: Deploy KaiTech Voice of Time to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper builds
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true  # Explicitly enable GitHub Pages
        
      - name: Prepare deployment files
        run: |
          echo "📁 Preparing KaiTech files for deployment..."
          ls -la
          echo "✅ Files ready for deployment"
          
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          retention-days: 30
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 600000  # 10 minutes timeout
          error_count: 10
          reporting_interval: 5000
          
      - name: Verify deployment
        run: |
          echo "🚀 KaiTech Voice of Time deployed successfully!"
          echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "✅ Deployment completed at: $(date)"
          
      - name: Test deployment health
        run: |
          echo "🔍 Testing deployment health..."
          sleep 10  # Wait for deployment to be fully available
          curl -I "${{ steps.deployment.outputs.page_url }}" || echo "⚠️ Site may need a moment to be fully available"
